/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import bus.Bus;
import bus.BusManager;
import depot.Depot;
import depot.DepotManager;
import employees.Employee;
import employees.EmployeeManagement;
import expenses.*;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JTextField;

/**
 * GUI window to add a new expense
 * @author George Candal
 */
public class AddExpenseGUI extends javax.swing.JFrame {
    private Database database;
    private BusManager busManager;
    private DepotManager depotManager;
    private EmployeeManagement employeeManagement;
    private Accounting accounting;
    private AdminMenuGUI adminMenuGUI;

    /**
     * Creates new form AddExpenseGUI
     */
    public AddExpenseGUI(Database database, AdminMenuGUI adminMenuGUI) {
        initComponents();
        this.database = database;
        this.busManager = database.getBusManager();
        this.depotManager = database.getDepotManager();
        this.employeeManagement = database.getEmployeeManagement();
        this.accounting = database.getAccounting();
        this.adminMenuGUI = adminMenuGUI;
        
        setLocationRelativeTo(adminMenuGUI);
        
        // style components
        applyTextFieldEffects(txtCost, "Cost");
        styleButton(btnAddExpense);
        styleComboBox(comboBoxType);
        styleComboBox(comboBoxEntity);
        lblType.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12));
        lblEntity.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAddExpense = new javax.swing.JButton();
        txtCost = new javax.swing.JTextField();
        comboBoxEntity = new javax.swing.JComboBox<>();
        lblEntity = new javax.swing.JLabel();
        comboBoxType = new javax.swing.JComboBox<>();
        lblType = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(215, 224, 223));

        btnAddExpense.setText("Add");
        btnAddExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddExpenseActionPerformed(evt);
            }
        });

        txtCost.setForeground(new java.awt.Color(153, 153, 153));
        txtCost.setText("Cost");

        lblEntity.setText("Entity");

        comboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Fuel", "Maintenance", "Salary", "Utility" }));
        comboBoxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTypeActionPerformed(evt);
            }
        });

        lblType.setText("Type");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblType)
                    .addComponent(lblEntity))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddExpense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxEntity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblType))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxEntity, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEntity))
                .addGap(18, 18, 18)
                .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddExpense)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setSize(new java.awt.Dimension(402, 287));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Fills the entity combo box whenever the type combo box is changed
     * @param evt 
     */
    private void comboBoxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTypeActionPerformed
        String type = (String) comboBoxType.getSelectedItem();
        comboBoxEntity.removeAllItems();
        // Arraylist of objects to populate combobox
        ArrayList<Bus> buses = busManager.getAllBuses();
        ArrayList<Employee> employees = employeeManagement.getAllEmployees();
        ArrayList<Depot> depots = depotManager.getAllDepots();
        
        
        // Fill combo box with corresponding entity according to type 
        switch (type) {
            case "Fuel":
                for (Bus bus : buses) {
                    comboBoxEntity.addItem("Bus " + bus.getBusId());
                }
                break;
            case "Maintenance":
                for (Bus bus : buses) {
                    comboBoxEntity.addItem("Bus " + bus.getBusId());
                }
                break;
            case "Salary":
                for (Employee employee : employees) {
                    comboBoxEntity.addItem(employee.getEmployeeID() + " " + employee.getName());
                }
                break;
            case "Utility":
                for (Depot depot : depots) {
                    comboBoxEntity.addItem("Depot " + depot.getDepotId());
                }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_comboBoxTypeActionPerformed

    /**
     * Creates a new expense when the Add Expense button is clicked
     * @param evt 
     */
    private void btnAddExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddExpenseActionPerformed
        String type = (String) comboBoxType.getSelectedItem();
        String entity = "";
        String id = "";
        int i = 0;
        float cost = Float.parseFloat(txtCost.getText());
        Bus bus;
        
        
        switch (type) {
            case "Fuel":
                entity = (String) comboBoxEntity.getSelectedItem();
                i = entity.indexOf(" ");
                id = entity.substring(i + 1);
                bus = busManager.findBusById(Integer.parseInt(id));
                new FuelCost(accounting, cost, bus);
                break;
                
            case "Maintenance":
                entity = (String) comboBoxEntity.getSelectedItem();
                i = entity.indexOf(" ");
                id = entity.substring(i + 1);
                bus = busManager.findBusById(Integer.parseInt(id));
                new MaintenanceCost(accounting, cost, bus);
                break;
                
            case "Salary":
                entity = (String) comboBoxEntity.getSelectedItem();
                i = entity.indexOf(" ");
                id = entity.substring(0, i);
                Employee e = employeeManagement.getEmployeeById(id);
                new Salary(accounting, cost, e);
                break;
                
            case "Utility":
                entity = (String) comboBoxEntity.getSelectedItem();
                i = entity.indexOf(" ");
                id = entity.substring(i + 1);
                Depot d = depotManager.findDepotById(Integer.parseInt(id));
                new Utility(accounting, cost, d);
                break;
                
        }
        
        adminMenuGUI.populateExpensesTable();
    }//GEN-LAST:event_btnAddExpenseActionPerformed

    /**
     * applies text field effects
     * @param field
     * @param placeholder 
     */
    private void applyTextFieldEffects(JTextField field, String placeholder) {
        field.setForeground(Color.GRAY);
        field.setText(placeholder);
        field.setBorder(BorderFactory.createLineBorder(Color.WHITE));

        field.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (field.getText().equals(placeholder)) {
                    field.setText("");
                    field.setForeground(Color.BLACK);
                }
                field.setBorder(BorderFactory.createLineBorder(Color.GREEN));
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (field.getText().isEmpty()) {
                    field.setText(placeholder);
                    field.setForeground(Color.GRAY);
                }
                field.setBorder(BorderFactory.createLineBorder(Color.WHITE));
            }
        });
    }

    /**
     * Styles any buttons passed as a parameter
     * @param button 
     */
    private void styleButton(JButton button) {
        button.setBackground(Color.WHITE);
        button.setForeground(Color.BLACK);
        button.setFont(new Font("Segoe UI", Font.PLAIN, 12));
        button.setPreferredSize(new Dimension(160, 23));
        button.setOpaque(true);
        button.setBorderPainted(false);
        button.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        Color hover = Color.green;

        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(hover);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(Color.WHITE);
            }
        });
    }
    
    /**
     * Styles the combo box it receives as a parameter
     * @param comboBox 
     */
    private void styleComboBox(JComboBox<?> comboBox) {
    comboBox.setBackground(Color.WHITE);
    comboBox.setForeground(Color.BLACK);
    comboBox.setFont(new Font("Segoe UI", Font.PLAIN, 12));
    comboBox.setPreferredSize(new Dimension(160, 23));
    comboBox.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    comboBox.setBorder(BorderFactory.createLineBorder(Color.WHITE));

    comboBox.addFocusListener(new FocusAdapter() {
        @Override
        public void focusGained(FocusEvent e) {
            comboBox.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }

        @Override
        public void focusLost(FocusEvent e) {
            comboBox.setBorder(BorderFactory.createLineBorder(Color.WHITE));
        }
    });
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddExpense;
    private javax.swing.JComboBox<String> comboBoxEntity;
    private javax.swing.JComboBox<String> comboBoxType;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblEntity;
    private javax.swing.JLabel lblType;
    private javax.swing.JTextField txtCost;
    // End of variables declaration//GEN-END:variables
}
