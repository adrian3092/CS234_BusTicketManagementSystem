/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 * This is the GUI for managing passengers
 * @author George Candal
 */
public class ManagePassengerGUI extends javax.swing.JFrame {

    private Database database;
    private AdminMenuGUI adminMenuGUI;
    
    /**
     * Creates new form ManagePassengerGUI
     */
    public ManagePassengerGUI() {
        initComponents();
    }
    
    /**
     * Constructor with parameters
     * @param database
     * @param adminMenuGUI 
     */
    public ManagePassengerGUI(Database database, AdminMenuGUI adminMenuGUI) {
        initComponents();
        this.database = database;
        this.adminMenuGUI = adminMenuGUI;
        
        // add a TableModelListener to watch for edits to the columns
        tblManagePassenger.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent event) {
                // only handle updates (not inserts or deletes)
                if (event.getType() == TableModelEvent.UPDATE) {
                    int row = event.getFirstRow();
                    updatePassenger(row);
                    
                }
            }
        });
        
    }
    
    /**
     * update the passenger name when the row is edited
     * @param row the row that was edited
     */
    public void updatePassenger(int row) {
        // get the table model
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblManagePassenger.getModel();

        // get the ID from the text field
        String PassengerID = txtManagePassenger.getText();

        // get the passenger from the database
        Passenger p = database.getPassengerManager().getPassengerById(PassengerID);

        if (p != null) {
            // get the new  value from the table
            String name = (String) model.getValueAt(row, 1);
            String email = (String) model.getValueAt(row, 2);
            String phone = (String) model.getValueAt(row, 3);

            // update the passenger
            p.setName(name);
            p.setEmail(email);
            p.setPhoneNumber(phone);

            // save changes to CSV
            database.getPassengerManager().savePassengersToCSV();

            // refresh the bus table in AdminMenuGUI
            if (adminMenuGUI != null) {
                adminMenuGUI.populatePassengerTable();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblManagePassenger = new javax.swing.JTable();
        lblManagePassenger = new javax.swing.JLabel();
        txtManagePassenger = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblManagePassenger.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Passenger ID", "Name", "Email", "Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManagePassenger);

        lblManagePassenger.setText("Enter a Passenger ID:");

        txtManagePassenger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManagePassengerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblManagePassenger, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(txtManagePassenger))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(lblManagePassenger)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtManagePassenger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        setBounds(500, 100, 850, 224);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Changes passenger attributes when enter is hit after changing a value in 
     * the table
     * @param evt 
     */
    private void txtManagePassengerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManagePassengerActionPerformed
        String passengerID = txtManagePassenger.getText();
        
        
        Passenger p = database.getPassengerManager().getPassengerById(passengerID);
        
        // create a table model with the appropriate columns
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblManagePassenger.getModel();
        
        // clear existing rows
        model.setRowCount(0);
        
        // add passenger info to the table
        model.addRow(new Object[]{
                p.getPassengerID(),
                p.getPassengerName(),
                p.getEmail(),
                p.getPhoneNumber()                
            });
    }//GEN-LAST:event_txtManagePassengerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagePassengerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagePassengerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagePassengerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagePassengerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagePassengerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblManagePassenger;
    private javax.swing.JTable tblManagePassenger;
    private javax.swing.JTextField txtManagePassenger;
    // End of variables declaration//GEN-END:variables
}
