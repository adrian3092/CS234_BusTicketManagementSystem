
package main;

import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.border.Border;
import login.LoginManager;

/**
 *
 * @author Owner
 */
public class PassengerLoginGUI extends javax.swing.JFrame {
    private LoginManager loginManager;
    private Database database;
    private PassengerManager passengerManager;
    private String passengerID;
    
    /**
     * Creates new form PassengerLoginGUI
     */
    public PassengerLoginGUI(Database database) {
        this.loginManager = database.getLoginManager();
        this.database = database;
        this.passengerManager = database.getPassengerManager();
        initComponents();
        getRootPane().setDefaultButton(loginBtn);
        setupUsernameBehavior();
        setupPasswordBehavior();
        setupSignUpLabelHover();
        setupContinueAsGuestLabelHover();
        setupSignUpLabelAction();
        addHoverEffect(loginBtn);
        setLocationRelativeTo(null);
        setAutoRequestFocus(false);
        
        
        loginBtn.setBackground(Color.white);
        loginBtn.setForeground(Color.black);
        loginBtn.setPreferredSize(new java.awt.Dimension(160, 23));
        loginBtn.setMinimumSize(new java.awt.Dimension(160, 23));
        loginBtn.setMaximumSize(new java.awt.Dimension(160, 23));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        userNameField = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        SignUpLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        continueAsGuestlbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Passenger Login");

        jPanel1.setBackground(new java.awt.Color(215, 224, 223));

        userNameField.setForeground(new java.awt.Color(153, 153, 153));
        userNameField.setText("Username");
        userNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        userNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameFieldActionPerformed(evt);
            }
        });

        loginBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        loginBtn.setText("Login");
        loginBtn.setBorderPainted(false);
        loginBtn.setMaximumSize(new java.awt.Dimension(160, 23));
        loginBtn.setMinimumSize(new java.awt.Dimension(72, 23));
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        SignUpLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SignUpLabel.setText("Sign up");

        passwordField.setForeground(new java.awt.Color(153, 153, 153));
        passwordField.setText("Password");
        passwordField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        continueAsGuestlbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        continueAsGuestlbl.setText("Continue As Guest");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 111, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(userNameField))
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(SignUpLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(continueAsGuestlbl)
                    .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SignUpLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(continueAsGuestlbl)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void userNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameFieldActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        String username = userNameField.getText();
        String password = new String(passwordField.getPassword());
        
        this.passengerID = loginManager.checkCredentials(username, password);
                    if (this.passengerID.equals("not found") || this.passengerID.equals("Admin") || this.passengerID.equals("Driver") || (this.passengerManager.getPassengerById(this.passengerID) == null)) {
                        new InvalidCredentials().setVisible(true);
                        userNameField.setText("Username");
                        userNameField.setForeground(Color.LIGHT_GRAY);
                        passwordField.setText("Password");
                        passwordField.setForeground(Color.LIGHT_GRAY);
                        }
                    else {
                        new passengerDashboardGUI(database, this.passengerID).setVisible(true);
                        dispose();
                    }
                       
    }//GEN-LAST:event_loginBtnActionPerformed
    
    
    // Set up focus behaviour for Username text field
    private void setupUsernameBehavior() {
    Border defaultBorder = BorderFactory.createLineBorder(Color.white, 1);
    Border focusBorder = BorderFactory.createLineBorder(new Color(0, 204, 51), 2);
    userNameField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            if (userNameField.getText().equals("Username")) {
                userNameField.setText("");
                userNameField.setForeground(new java.awt.Color(0, 0, 0)); // Typing color
                userNameField.setBorder(focusBorder);
            }
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            if (userNameField.getText().isEmpty()) {
                userNameField.setForeground(new java.awt.Color(153, 153, 153)); // Placeholder color
                userNameField.setText("Username");
                userNameField.setBorder(defaultBorder);
            }
        }
    });
    }
    
    // set up password focus behaviour for password field
    private void setupPasswordBehavior() {
    passwordField.setEchoChar((char)0); // No masking initially (for placeholder)
    Border defaultBorder = BorderFactory.createLineBorder(Color.white, 1);
    Border focusBorder = BorderFactory.createLineBorder(new Color(0, 204, 51), 2);

    passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            String pwd = new String(passwordField.getPassword());
            if (pwd.equals("Password")) {
                passwordField.setText("");
                passwordField.setForeground(new java.awt.Color(0, 0, 0)); // Typing color
                passwordField.setEchoChar('â€¢'); // Restore masking when typing
                passwordField.setBorder(focusBorder);
            }
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            String pwd = new String(passwordField.getPassword());
            if (pwd.isEmpty()) {
                passwordField.setForeground(new java.awt.Color(153, 153, 153)); // Placeholder color
                passwordField.setText("Password");
                passwordField.setEchoChar((char)0); // No masking for placeholder
                passwordField.setBorder(defaultBorder);
            }
        }
    });
    }
    
    private void setupSignUpLabelHover() {
    SignUpLabel.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            SignUpLabel.setForeground(Color.green); // Hover color 
            SignUpLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Change cursor to hand
        }

        @Override
        public void mouseExited(java.awt.event.MouseEvent evt) {
            SignUpLabel.setForeground(Color.black); // Original color (green)
            SignUpLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); // Restore cursor
        }
    });
    }
    
    private void setupContinueAsGuestLabelHover() {
    continueAsGuestlbl.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            continueAsGuestlbl.setForeground(Color.green); // Hover color (light blue)
            continueAsGuestlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Change cursor to hand
        }

        @Override
        public void mouseExited(java.awt.event.MouseEvent evt) {
            continueAsGuestlbl.setForeground(Color.black); // Original color (green)
            continueAsGuestlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); // Restore cursor
        }
    });
    }
    
    private void setupSignUpLabelAction() {
    SignUpLabel.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            openSignUpForm();
        }
    });
    }
    
    private void openSignUpForm() {

    PassengerSignUpGUI signUpForm = new PassengerSignUpGUI(); 
    signUpForm.setVisible(true);
    }
    
    private void addHoverEffect(final JButton button) {
    button.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            loginBtn.setBackground(Color.green); // green background on hover
            loginBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Optional: Hand cursor
        }

        @Override
        public void mouseExited(java.awt.event.MouseEvent evt) {
            loginBtn.setBackground(Color.white); // Restore white background
            loginBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); // Restore default cursor
        }
    });
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PassengerLoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PassengerLoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PassengerLoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PassengerLoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PassengerLoginGUI().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SignUpLabel;
    private javax.swing.JLabel continueAsGuestlbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userNameField;
    // End of variables declaration//GEN-END:variables
}
