/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author George Candal
 */
public class AdminMenuGUI extends javax.swing.JFrame {

    /**
     * Creates new form AdminMenuGUI
     */
    private Database database;
    
    public AdminMenuGUI(Database database) {
        this.database = database;

        initComponents();
        styleAdminButtons();
        normalizeButtonFonts();
        customizeTabHeaders();
        
        // load buses into the table
        populateBusTable();
        // load routes into the table
        populateRouteTable();
        // load depots into the table
        populateDepotTable();
        // load employees into the table
        populateEmployeeTable();
        // load payments into the table
        populatePaymentsTable();
        // load expenses into the table
        populateExpensesTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabAdmin = new javax.swing.JTabbedPane();
        panelBus = new javax.swing.JPanel();
        btnAddBus = new javax.swing.JButton();
        btnManageBus = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableBus = new javax.swing.JTable();
        panelSchedule = new javax.swing.JPanel();
        btnAddSchedule = new javax.swing.JButton();
        btnRemoveSchedule = new javax.swing.JButton();
        btnManageSchedule = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tableSchedule = new javax.swing.JTable();
        panelRoute = new javax.swing.JPanel();
        btnAddRoute = new javax.swing.JButton();
        btnManageRoute = new javax.swing.JButton();
        btnRouteAssignment = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRoute = new javax.swing.JTable();
        panelDepot = new javax.swing.JPanel();
        btnAddDepot = new javax.swing.JButton();
        btnDeleteDepot = new javax.swing.JButton();
        btnAssignBus = new javax.swing.JButton();
        btnUnassignBus = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDepot = new javax.swing.JTable();
        panelEmployee = new javax.swing.JPanel();
        btnAddEmployee = new javax.swing.JButton();
        btnDeleteEmployee = new javax.swing.JButton();
        btnUpdateEmployee = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableEmployee = new javax.swing.JTable();
        panelExpenses = new javax.swing.JPanel();
        btnExpenseReport = new javax.swing.JButton();
        btnManagePayments = new javax.swing.JButton();
        btnNewExpense = new javax.swing.JButton();
        btnRemoveExpense = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableExpenses = new javax.swing.JTable();
        panelPayments = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablePayments = new javax.swing.JTable();
        btnPaymentReport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Admin Menu");

        tabAdmin.setBackground(new java.awt.Color(16, 32, 47));
        tabAdmin.setForeground(new java.awt.Color(215, 224, 223));
        tabAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabAdmin.setOpaque(true);
        tabAdmin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabAdminStateChanged(evt);
            }
        });

        panelBus.setBackground(new java.awt.Color(215, 224, 223));

        btnAddBus.setText("Add a New Bus");
        btnAddBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBusActionPerformed(evt);
            }
        });

        btnManageBus.setText("Manage an Existing Bus");
        btnManageBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageBusActionPerformed(evt);
            }
        });

        tableBus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Bus ID", "Year/Make/Model", "Mileage", "Seating Capacity", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableBus);

        javax.swing.GroupLayout panelBusLayout = new javax.swing.GroupLayout(panelBus);
        panelBus.setLayout(panelBusLayout);
        panelBusLayout.setHorizontalGroup(
            panelBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnManageBus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(btnAddBus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        panelBusLayout.setVerticalGroup(
            panelBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBusLayout.createSequentialGroup()
                        .addComponent(btnAddBus)
                        .addGap(18, 18, 18)
                        .addComponent(btnManageBus)))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        tabAdmin.addTab("Bus", panelBus);

        panelSchedule.setBackground(new java.awt.Color(215, 224, 223));

        btnAddSchedule.setText("Add a New Schedule");

        btnRemoveSchedule.setText("Remove an Existing Schedule");

        btnManageSchedule.setText("Manage an Existing Schedule");

        tableSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Route", "Start Time", "Departure Times", "Stops"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tableSchedule);

        javax.swing.GroupLayout panelScheduleLayout = new javax.swing.GroupLayout(panelSchedule);
        panelSchedule.setLayout(panelScheduleLayout);
        panelScheduleLayout.setHorizontalGroup(
            panelScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelScheduleLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panelScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManageSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        panelScheduleLayout.setVerticalGroup(
            panelScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelScheduleLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelScheduleLayout.createSequentialGroup()
                        .addComponent(btnAddSchedule)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoveSchedule)
                        .addGap(18, 18, 18)
                        .addComponent(btnManageSchedule)))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        tabAdmin.addTab("Schedule", panelSchedule);

        panelRoute.setBackground(new java.awt.Color(215, 224, 223));

        btnAddRoute.setText("Add Route");
        btnAddRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRouteActionPerformed(evt);
            }
        });

        btnManageRoute.setText("Manage Route");

        btnRouteAssignment.setText("Manage Route Assignment");

        tableRoute.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Route ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableRoute);

        javax.swing.GroupLayout panelRouteLayout = new javax.swing.GroupLayout(panelRoute);
        panelRoute.setLayout(panelRouteLayout);
        panelRouteLayout.setHorizontalGroup(
            panelRouteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRouteLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panelRouteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRouteAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManageRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        panelRouteLayout.setVerticalGroup(
            panelRouteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRouteLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelRouteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelRouteLayout.createSequentialGroup()
                        .addComponent(btnAddRoute)
                        .addGap(18, 18, 18)
                        .addComponent(btnManageRoute)
                        .addGap(18, 18, 18)
                        .addComponent(btnRouteAssignment)))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        tabAdmin.addTab("Route", panelRoute);

        panelDepot.setBackground(new java.awt.Color(215, 224, 223));

        btnAddDepot.setText("Add a New Depot");

        btnDeleteDepot.setText("Delete an Existing Depot");

        btnAssignBus.setText("Assign a Bus to a Depot");

        btnUnassignBus.setText("Unassign a Bus From a Depot");

        tableDepot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Depot ID", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableDepot);

        javax.swing.GroupLayout panelDepotLayout = new javax.swing.GroupLayout(panelDepot);
        panelDepot.setLayout(panelDepotLayout);
        panelDepotLayout.setHorizontalGroup(
            panelDepotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDepotLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(panelDepotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddDepot, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteDepot, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssignBus, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUnassignBus, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        panelDepotLayout.setVerticalGroup(
            panelDepotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDepotLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(panelDepotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDepotLayout.createSequentialGroup()
                        .addComponent(btnAddDepot)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteDepot)
                        .addGap(18, 18, 18)
                        .addComponent(btnAssignBus)
                        .addGap(18, 18, 18)
                        .addComponent(btnUnassignBus)))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        tabAdmin.addTab("Depot", panelDepot);

        panelEmployee.setBackground(new java.awt.Color(215, 224, 223));

        btnAddEmployee.setText("Add a New Employee");

        btnDeleteEmployee.setText("Delete an Existing Employee");

        btnUpdateEmployee.setText("Update Employee Information");

        tableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Job Title", "Email", "Phone Number", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tableEmployee);

        javax.swing.GroupLayout panelEmployeeLayout = new javax.swing.GroupLayout(panelEmployee);
        panelEmployee.setLayout(panelEmployeeLayout);
        panelEmployeeLayout.setHorizontalGroup(
            panelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmployeeLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(panelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        panelEmployeeLayout.setVerticalGroup(
            panelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmployeeLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelEmployeeLayout.createSequentialGroup()
                        .addComponent(btnAddEmployee)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteEmployee)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateEmployee)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        tabAdmin.addTab("Employee", panelEmployee);

        panelExpenses.setBackground(new java.awt.Color(215, 224, 223));

        btnExpenseReport.setText("Generate Expense Report");
        btnExpenseReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpenseReportActionPerformed(evt);
            }
        });

        btnManagePayments.setText("Manage Payments");

        btnNewExpense.setText("Add a New Expense");

        btnRemoveExpense.setText("Remove an Existing Expense");

        tableExpenses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Expense ID", "Type", "Entity", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableExpenses);

        javax.swing.GroupLayout panelExpensesLayout = new javax.swing.GroupLayout(panelExpenses);
        panelExpenses.setLayout(panelExpensesLayout);
        panelExpensesLayout.setHorizontalGroup(
            panelExpensesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExpensesLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panelExpensesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExpenseReport, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManagePayments, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        panelExpensesLayout.setVerticalGroup(
            panelExpensesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExpensesLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelExpensesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelExpensesLayout.createSequentialGroup()
                        .addComponent(btnExpenseReport)
                        .addGap(59, 59, 59)
                        .addComponent(btnManagePayments)
                        .addGap(18, 18, 18)
                        .addComponent(btnNewExpense)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoveExpense)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        tabAdmin.addTab("Expenses", panelExpenses);

        panelPayments.setBackground(new java.awt.Color(215, 224, 223));

        tablePayments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Payment ID", "Name", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tablePayments);

        btnPaymentReport.setText("Generate Payment Report");

        javax.swing.GroupLayout panelPaymentsLayout = new javax.swing.GroupLayout(panelPayments);
        panelPayments.setLayout(panelPaymentsLayout);
        panelPaymentsLayout.setHorizontalGroup(
            panelPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPaymentsLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnPaymentReport, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        panelPaymentsLayout.setVerticalGroup(
            panelPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPaymentsLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(panelPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPaymentReport))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        tabAdmin.addTab("Payments", panelPayments);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabAdmin, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabAdmin)
        );

        setSize(new java.awt.Dimension(923, 384));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddRouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRouteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddRouteActionPerformed

    private void tabAdminStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabAdminStateChanged
        // refresh the appropriate table based on the selected tab
        int selectedTab = tabAdmin.getSelectedIndex();
        if (selectedTab == 0) { // bus tab
            populateBusTable();
        }
    }//GEN-LAST:event_tabAdminStateChanged

    private void btnAddBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBusActionPerformed
        AddBusGUI addBusGUI = new AddBusGUI(this.database, this);
        addBusGUI.setVisible(true);
    }//GEN-LAST:event_btnAddBusActionPerformed

    private void btnManageBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageBusActionPerformed
        ManageBusGUI manageBusGUI = new ManageBusGUI(this.database, this);
        manageBusGUI.setVisible(true);
    }//GEN-LAST:event_btnManageBusActionPerformed

    private void btnExpenseReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpenseReportActionPerformed
        new ExpenseReportGUI(database).setVisible(true);
    }//GEN-LAST:event_btnExpenseReportActionPerformed
    
    /**
     * populates the bus table with data from the bus manager
     * @author Adrian Zielinski
     */
    public void populateBusTable() {
        if (database == null || database.getBusManager() == null) {
            return;
        }
        
        // get all buses from the BusManager
        java.util.ArrayList<bus.Bus> buses = database.getBusManager().getAllBuses();
        
        // create a table model with the appropriate columns
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableBus.getModel();
        
        // clear existing rows
        model.setRowCount(0);
        
        // add each bus to the table
        for (bus.Bus bus : buses) {
            model.addRow(new Object[]{
                bus.getBusId(),
                bus.getYear() + "/" + bus.getMake() + "/" + bus.getModel(),
                bus.getMileage(),
                bus.getCapacity(),
                bus.getStatus()
            });
        }
    }
    
    /**
     * populates the schedule table with data from the schedule manager
     */
    private void populateScheduleTable() {
        //
    }
    
    /**
     * populates the route table with data from the route manager
     * @author Adrian Zielinski
     */
    private void populateRouteTable() {
        if (database == null || database.getRouteManager() == null) {
            return;
        }
        
        // get all routes from the RouteManager
        java.util.ArrayList<Route> routes = database.getRouteManager().getRoutes();
        
        // create a table model with the appropriate columns
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableRoute.getModel();
        
        // clear existing rows
        model.setRowCount(0);
        
        // add each route to the table
        for (Route route: routes) {
            model.addRow(new Object[]{
                route.getRouteID(),
                route.getName()
            });
        }
    }
    
    /**
     * populates the depot table with data from the depot manager
     * @author Adrian Zielinski
     */
    private void populateDepotTable() {
        if (database == null || database.getDepotManager() == null) {
            return;
        }
        
        // get all depots from the DepotManager
        java.util.ArrayList<depot.Depot> depots = database.getDepotManager().getAllDepots();
        
        // create a table model with the appropriate columns
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableDepot.getModel();
        
        // clear existing rows
        model.setRowCount(0);
        
        // add each depot to the table
        for (depot.Depot depot: depots) {
            model.addRow(new Object[]{
                depot.getDepotId(),
                depot.getDepotAddress()
            });
        }
    }
    
    /**
     * populates the employee table with data from EmployeeManagement
     * @author Adrian Zielinski
     */
    private void populateEmployeeTable() {
        if (database == null || database.getEmployeeManagement() == null) {
            return;
        }
        
        // get all employees from EmployeeManagement
        java.util.ArrayList<employees.Employee> employees = database.getEmployeeManagement().getAllEmployees();
        
        // create a table model with the appropriate columns
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableEmployee.getModel();
        
        // clear existing rows
        model.setRowCount(0);
        
        // add each employee to the table
        for (employees.Employee employee: employees) {
            model.addRow(new Object[]{
                employee.getName(),
                employee.getEmployeeID(),
                employee.getJobTitle(),
                employee.getEmail(),
                employee.getPhoneNumber(),
                "$" + employee.getSalary()
            });
        }
    }
    
    /**
     * populates the expenses table
     * @author George Candal
     */
    private void populateExpensesTable() {
        if (database == null || database.getAccounting() == null) {
            return;
        }
        
        // get all expenses from Accounting
        java.util.ArrayList<expenses.Expense> expenses = database.getAccounting().getAllExpenses();
        
        // create a table model with the appropriate columns
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableExpenses.getModel();
        
        // clear existing rows
        model.setRowCount(0);
        
        // add each payment to the table
        String entity = "";
        String entityID = "";
        
        for (expenses.Expense expense: expenses) {
            if (expense instanceof expenses.FuelCost) {
                entity = "Bus";
                entityID = String.valueOf(((expenses.FuelCost) expense).getBus().getBusId());
            } else if (expense instanceof expenses.MaintenanceCost) {
                entity = "Bus";
                entityID = String.valueOf(((expenses.MaintenanceCost) expense).getBus().getBusId());                
            } else if (expense instanceof expenses.Salary) {
                entity = "Employee";
                entityID = ((expenses.Salary) expense).getEmployee().getEmployeeID();
            } else if (expense instanceof expenses.Utility) {
                entity = "Depot";
                entityID = String.valueOf(((expenses.Utility) expense).getDepot().getDepotId());
            }
            model.addRow(new Object[]{
                expense.getExpenseId(),
                expense.getClass().getSimpleName(),
                entity + " " + entityID,
                "$" + expense.getCost()
            });
        }
    }
    
    /**
     * populates the payments table with data from the payment manager
     * @author Adrian Zielinski
     */
    private void populatePaymentsTable() {
        if (database == null || database.getPaymentManager() == null) {
            return;
        }
        
        // get all payments from PaymentManager
        java.util.ArrayList<payment.Payment> payments = database.getPaymentManager().getAllPayments();
        
        // create a table model with the appropriate columns
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tablePayments.getModel();
        
        // clear existing rows
        model.setRowCount(0);
        
        // add each payment to the table
        for (payment.Payment payment: payments) {
            model.addRow(new Object[]{
                payment.getPaymentId(),
                payment.getPassenger().getPassengerName(),
                "$" + payment.getPaymentAmount()
            });
        }
    }

    private void styleAdminButtons() {
    Color bg = Color.WHITE;
    Color fg = Color.BLACK;

    JButton[] buttons = {
        btnAddBus, btnManageBus,
        btnAddDepot, btnDeleteDepot, btnAssignBus, btnUnassignBus,
        btnAddSchedule, btnRemoveSchedule, btnManageSchedule,
        btnAddRoute, btnManageRoute, btnRouteAssignment,
        btnAddEmployee, btnDeleteEmployee, btnUpdateEmployee,
        btnExpenseReport, btnPaymentReport, btnManagePayments,
        btnNewExpense, btnRemoveExpense
    };

    for (JButton button : buttons) {
        button.setBackground(bg);
        button.setForeground(fg);
        button.setOpaque(true);  // important for background color to show
        button.setBorderPainted(false); // optional for a cleaner look
    }
}
    
    private void customizeTabHeaders() {
    for (int i = 0; i < tabAdmin.getTabCount(); i++) {
        String title = tabAdmin.getTitleAt(i);
        tabAdmin.setTitleAt(i, ""); // Remove default title

        JLabel tabLabel = new JLabel(title, SwingConstants.CENTER);
        tabLabel.setFont(new Font("Segoe UI", Font.PLAIN, 12));
        tabLabel.setForeground(new Color(215, 224, 223));
        tabLabel.setBorder(BorderFactory.createEmptyBorder(8, 16, 8, 16));
        tabLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        JPanel tabPanel = new JPanel(new BorderLayout());
        tabPanel.setOpaque(true);
        tabPanel.setBackground(new Color(16, 32, 47)); // default inactive color
        tabPanel.add(tabLabel, BorderLayout.CENTER);

        final int index = i;

        // Hover effect
        tabPanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                if (tabAdmin.getSelectedIndex() != index) {
                    tabPanel.setBackground(new Color(34, 50, 65)); // hover color
                }
            }

            @Override
            public void mouseExited(MouseEvent e) {
                if (tabAdmin.getSelectedIndex() != index) {
                    tabPanel.setBackground(new Color(16, 32, 47)); // default
                }
            }

            @Override
            public void mouseClicked(MouseEvent e) {
                tabAdmin.setSelectedIndex(index);
            }
        });

        tabAdmin.setTabComponentAt(index, tabPanel);
    }

    // Style selected tab on tab change
    tabAdmin.addChangeListener(e -> updateTabStyles());
    updateTabStyles(); // Apply to initial tab
    
}




    private void normalizeButtonFonts() {
    Font plainFont = new Font("Segoe UI", Font.PLAIN, 12); // or any preferred font
    JButton[] buttons = {
        btnAddBus, btnManageBus,
        btnAddDepot, btnDeleteDepot, btnAssignBus, btnUnassignBus,
        btnAddSchedule, btnRemoveSchedule, btnManageSchedule,
        btnAddRoute, btnManageRoute, btnRouteAssignment,
        btnAddEmployee, btnDeleteEmployee, btnUpdateEmployee,
        btnExpenseReport, btnPaymentReport, btnManagePayments,
        btnNewExpense, btnRemoveExpense
    };

    for (JButton btn : buttons) {
        btn.setFont(plainFont);
    }
}
    
    private void updateTabStyles() {
    for (int i = 0; i < tabAdmin.getTabCount(); i++) {
        Component c = tabAdmin.getTabComponentAt(i);
        if (c instanceof JPanel panel) {
            Component label = panel.getComponent(0);
            if (label instanceof JLabel tabLabel) {
                if (i == tabAdmin.getSelectedIndex()) {
                    panel.setBackground(new Color(0, 153, 0)); // active green
                    tabLabel.setForeground(Color.WHITE);
                    tabLabel.setFont(new Font("Segoe UI", Font.BOLD, 12));
                } else {
                    panel.setBackground(new Color(16, 32, 47));
                    tabLabel.setForeground(new Color(215, 224, 223));
                    tabLabel.setFont(new Font("Segoe UI", Font.PLAIN, 12));
                }
            }
        }
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBus;
    private javax.swing.JButton btnAddDepot;
    private javax.swing.JButton btnAddEmployee;
    private javax.swing.JButton btnAddRoute;
    private javax.swing.JButton btnAddSchedule;
    private javax.swing.JButton btnAssignBus;
    private javax.swing.JButton btnDeleteDepot;
    private javax.swing.JButton btnDeleteEmployee;
    private javax.swing.JButton btnExpenseReport;
    private javax.swing.JButton btnManageBus;
    private javax.swing.JButton btnManagePayments;
    private javax.swing.JButton btnManageRoute;
    private javax.swing.JButton btnManageSchedule;
    private javax.swing.JButton btnNewExpense;
    private javax.swing.JButton btnPaymentReport;
    private javax.swing.JButton btnRemoveExpense;
    private javax.swing.JButton btnRemoveSchedule;
    private javax.swing.JButton btnRouteAssignment;
    private javax.swing.JButton btnUnassignBus;
    private javax.swing.JButton btnUpdateEmployee;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel panelBus;
    private javax.swing.JPanel panelDepot;
    private javax.swing.JPanel panelEmployee;
    private javax.swing.JPanel panelExpenses;
    private javax.swing.JPanel panelPayments;
    private javax.swing.JPanel panelRoute;
    private javax.swing.JPanel panelSchedule;
    private javax.swing.JTabbedPane tabAdmin;
    private javax.swing.JTable tableBus;
    private javax.swing.JTable tableDepot;
    private javax.swing.JTable tableEmployee;
    private javax.swing.JTable tableExpenses;
    private javax.swing.JTable tablePayments;
    private javax.swing.JTable tableRoute;
    private javax.swing.JTable tableSchedule;
    // End of variables declaration//GEN-END:variables
}
